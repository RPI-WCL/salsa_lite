module examples.migration;

behavior LargeUniversalActor {

    byte[] largeData;

    LargeUniversalActor(){
    }

    LargeUniversalActor(int size){
		largeData = new byte[size];
    }

    void act(String args[]){
		try {
		    int howMany = Integer.parseInt(args[0]);
		    int size = Integer.parseInt(args[1]);
		    UAN uan = new UAN(args[2]);
		    UAL ual = new UAL(args[3]);
		    long initialTime = System.currentTimeMillis();
		    for (int i=0; i<howMany; i++){
				LargeUniversalActor a = new LargeUniversalActor(size);
				a<-bind(uan,ual);
		    }
		    long finalTime = System.currentTimeMillis();
		    standardOutput<-println(howMany+" Large actor creations.  "+
					    "Time taken (ms): "+
					    (finalTime-initialTime));
		} catch (ArrayIndexOutOfBoundsException e){
		    standardOutput<-println
			("Usage: java migration.LargeUniversalActor "+
			 "<howMany> <size> <UAN> <UAL>");
		} catch (Exception e){
		    standardOutput<-println(e);
		}
    }


}
