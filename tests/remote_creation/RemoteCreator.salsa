import salsa_lite.runtime.io.StandardOutput;

import object java.util.ArrayList;

behavior RemoteCreator extends RemoteActor {

    StandardOutput origin_output;

    ack go() {
        new StandardOutput()<-println("Hello from: " + self.getName() + "!") @
        origin_output<-println("Remote hello from: " + self.getName() + "!");
    }

    RemoteCreator(StandardOutput origin_output) {
        self.origin_output = origin_output;
        System.err.println("Constructed: " + self.getName() + "!");
    }

    RemoteCreator(String[] arguments) {
        if (arguments.length % 2 != 0 || arguments.length < 2) {
            System.err.println("Error, usage:");
            System.err.println("    java RemoteCreator <host1> <port1> <host2> <port2> ... <hostn> <portn>");
            System.exit(0);
        }
        ArrayList<String> hosts = new ArrayList<String>();
        ArrayList<Integer> ports = new ArrayList<Integer>();

        for (int i = 0; i < arguments.length; i += 2) {
            hosts.add(arguments[i]);
            ports.add(Integer.parseInt(arguments[i + 1]));
        }

        for (int i = 0; i < hosts.size(); i++) {
            token RemoteCreator rc = new RemoteCreator(new StandardOutput()) called ("rc_" + i) at (hosts.get(i), ports.get(i)) on (-1);
            rc<-go() @
            new StandardOutput()<-println("Remote go() finished!");

//            new RemoteCreator(new StandardOutput()) called ("rc_" + i) at (hosts.get(i), ports.get(i))<-go();
        }
    }
}
