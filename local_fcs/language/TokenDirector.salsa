module salsa_lite.local_fcs.language;

import object java.util.LinkedList;

behavior TokenDirector<T> extends ContinuationDirector {

	LinkedList<MessageDirector> message_directors = new LinkedList<MessageDirector>();
	LinkedList<Integer> positions = new LinkedList<Intger>();

	T value;
    boolean unresolved = true;

	TokenDirector() {
	}

    TokenDirector(T value) {
        self.value = value;
        self.unresolved = false;
    }

	ack setValue(T value) {
//        System.err.println("set value for token director: " + value + ", message_directors.size(): " + message_directors.size() + ", positions.size(): " + positions.size());

        self.unresolved = false;
		self.value = value;

		MessageDirector message_director;
		int position;

		while (message_directors.size() > 0) {
            message_director = message_directors.removeFirst();
			position = positions.removeFirst();
			Message message = new Message(Message.SIMPLE_MESSAGE, message_director, 0, new Object[]{position, value});
			StageService.sendMessage(message);
		}
	}

	ack addMessageDirector(MessageDirector message_director, int position) {
//        System.err.println("adding message director with position: " + position + " to token director.");

		if (unresolved) {
			message_directors.add(message_director);
			positions.add(position);
		} else {
			Message message = new Message(Message.SIMPLE_MESSAGE, message_director, 0, new Object[]{position, value});
			StageService.sendMessage(message);
		}
	}

}
