module salsa_lite.wwc.language;

import object java.util.LinkedList;

behavior TokenDirector extends ContinuationDirector {

	LinkedList<Director> directors = new LinkedList<Director>();
	LinkedList<Integer> positions = new LinkedList<Integer>();

	Object value;
    boolean unresolved = true;

	TokenDirector() {
	}

    TokenDirector(Object value) {
        self.value = value;
        self.unresolved = false;
    }

	ack setValue(Object value) {
//        System.err.println("set value for token director: " + value + ", directors.size(): " + directors.size() + ", positions.size(): " + positions.size());

        self.unresolved = false;
		self.value = value;

		Director director;
		int position;

		while (directors.size() > 0) {
            director = directors.removeFirst();
			position = positions.removeFirst();

            StageService.sendMessage(new Message(Message.SIMPLE_MESSAGE, (LocalActor)director, 0 /*setValue*/, new Object[]{position, value}));
		}
	}

	ack addDirector(Director director, int position) {
//        System.err.println("adding message director with position: " + position + " to token director.");

		if (unresolved) {
			directors.add(director);
			positions.add(position);
		} else {
            StageService.sendMessage(new Message(Message.SIMPLE_MESSAGE, (LocalActor)director, 0 /*setValue*/, new Object[]{position, value}));
		}
	}

}
