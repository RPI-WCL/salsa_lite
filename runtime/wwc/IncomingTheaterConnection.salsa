module salsa_lite.runtime.wwc;

import object java.net.Socket;
import object java.io.IOException;
import object java.io.BufferedInputStream;
import object java.io.ObjectInputStream;

behavior IncomingTheaterConnection implements StagedActor {

    Socket socket = null;
    ObjectInputStream in = null;

    IncomingTheaterConnection(Socket socket) {
        self.socket = socket;
        try {
            in = new ObjectInputStream(new BufferedInputStream(socket.getInputStream()));
        } catch (IOException ioe) {
            StringBuffer sb = new StringBuffer();
            sb.append("Error in IncomingTheaterConnection, IOException: " + ioe + "\n");
            sb.append("\tremote host [" + socket.getLocalSocketAddress() + "], local port [" + socket.getLocalPort() + "]\n");
            sb.append("\tremote host [" + socket.getLocalSocketAddress() + "], local port [" + socket.getLocalPort() + "]\n");
            for (StackTraceElement ste : ioe.getStackTrace()) {
                sb.append("\t" + ste.toString() + "\n");
            }
            System.err.println(sb.toString());
            pass;
        }

        self<-listen();
    }

    ack listen() {
        Object o = null;
        
        try {
            o = in.readObject();
            in.reset();
        } catch (IOException ioe) {
            StringBuffer sb = new StringBuffer();
            sb.append("Error in IncomingTheaterConnection, IOException: " + ioe + "\n");
            sb.append("\tremote host [" + socket.getLocalSocketAddress() + "], local port [" + socket.getLocalPort() + "]\n");
            sb.append("\tremote host [" + socket.getLocalSocketAddress() + "], local port [" + socket.getLocalPort() + "]\n");
            for (StackTraceElement ste : ioe.getStackTrace()) {
                sb.append("\t" + ste.toString() + "\n");
            }
            System.err.println(sb.toString());

        } catch (ClassNotFoundException cnfe) {
            StringBuffer sb = new StringBuffer();
            sb.append("Error in IncomingTheaterConnection, ClassNotFoundException: " + cnfe + "\n");
            sb.append("\tremote host [" + socket.getLocalSocketAddress() + "], local port [" + socket.getLocalPort() + "]\n");
            sb.append("\tremote host [" + socket.getLocalSocketAddress() + "], local port [" + socket.getLocalPort() + "]\n");
            for (StackTraceElement ste : cnfe.getStackTrace()) {
                sb.append("\t" + ste.toString() + "\n");
            }
            System.err.println(sb.toString());
        }

        if (o instanceof Actor) {
//            MobileActorRegistry.addEntry(...);
        } else if (o instanceof Message) {
            //check to see if the target actor is here

        } else {
            StringBuffer sb = new StringBuffer();
            sb.append("Error in IncomingTheaterConnection, received unknown object: " + o + "\n");
            sb.append("\tremote host [" + socket.getLocalSocketAddress() + "], local port [" + socket.getLocalPort() + "]\n");
            sb.append("\tremote host [" + socket.getLocalSocketAddress() + "], local port [" + socket.getLocalPort() + "]\n");
            System.err.println(sb.toString());
        }

        self<-listen();
    }
}
